
// Stylus definitions for bloody-grid

@import 'settings'

// System-wide routines
hash(hash, key, offset)
	return pair[offset] if pair[0] == key for pair in hash


// Base Styles
{$classname}
	display: inline-block
	position: relative
	width: 100%
	height: 100%

{$classname}:after
	content: ''
	display: block

{$classname} [data-{$prefix}-size]
	position: absolute
	overflow: hidden

define-context($column-count)
	$row-count = hash($column-info, $column-count, 1)
	
	
	// Explicitly hide with 'hide' attribute value.
	{$classname} [data-{$prefix}-{$column-count}="hide"]
		display: none
	
	// Define container height. 
	for $container-row in (1 .. $row-count)
		{$classname}[data-{$prefix}-rows-{$column-count}={'"' + $container-row + '"'}]
			&:after
				margin-top: $box-ratio * ($container-row / $column-count)
			
			for $i in (1 .. $box-grid-h)
				& [data-{$prefix}-size$={'"x' + $i + '"'}]
					height: ((100 / $container-row) * $i)%
					
			// Define rows.
			for $row in (0 ... $row-count)
				& [data-{$prefix}-{$column-count}$={'",' + $row + '"'}]
					top: ((100 / $container-row) * $row)%
	
	// Define columns. 
	for $column in (0 ... $column-count)
		{$classname} [data-{$prefix}-{$column-count}^={'"' + $column + ',"'}]
			left: ((100 / $column-count) * $column)%
	
	// Define box sizes.
	for $i in (1 .. $box-grid-w)
		{$classname} [data-{$prefix}-size^={'"' + $i + 'x"'}]
			width: ((100 / $column-count) * $i)%

media-context($column-count)
	$min-width = hash($column-info, $column-count, 2)
	$max-width = hash($column-info, $column-count, 3)
	
	$media-context = 'only screen' + (($min-width)? ' and (min-width:' + $min-width + ')' : '') + (($max-width)? ' and (max-width:' + $max-width + ')' : '')

define-context($default-column)

// Define each gridsets.
for $column-count in $columns
	$media-context = media-context($column-count)
	if $column-count != $default-column
		@media $media-context
			define-context($column-count)